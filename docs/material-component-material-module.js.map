{"version":3,"sources":["./src/app/material-component/manage-order/manage-order.component.ts","./src/app/material-component/manage-order/manage-order.component.html","./src/app/material-component/manage-category/manage-category.component.ts","./src/app/material-component/manage-category/manage-category.component.html","./src/app/material-component/dialog/user/user.component.ts","./src/app/material-component/dialog/user/user.component.html","./src/app/material-component/material.module.ts","./src/app/material-component/dialog/category/category.component.ts","./src/app/material-component/dialog/category/category.component.html","./src/app/material-component/dialog/view-bill-products/view-bill-products.component.ts","./src/app/material-component/dialog/view-bill-products/view-bill-products.component.html","./src/app/services/product.service.ts","./node_modules/file-saver/dist/FileSaver.min.js","./src/app/material-component/manage-user/manage-user.component.ts","./src/app/material-component/manage-user/manage-user.component.html","./src/app/services/bill.service.ts","./src/app/services/category.service.ts","./src/app/material-component/dialog/product/product.component.ts","./src/app/material-component/dialog/product/product.component.html","./src/app/material-component/manage-product/manage-product.component.ts","./src/app/material-component/manage-product/manage-product.component.html","./src/app/material-component/view-bill/view-bill.component.ts","./src/app/material-component/view-bill/view-bill.component.html","./src/app/material-component/material.routing.ts"],"names":[],"mappings":"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","file":"material-component-material-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { BillService } from 'src/app/services/bill.service';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { SnackbarService } from 'src/app/services/snackbar.service';\r\nimport { GlobalConstants } from 'src/app/shared/global-constants';\r\nimport { saveAs } from 'file-saver';\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\r\n\r\n@Component({\r\n  selector: 'app-manage-order',\r\n  templateUrl: './manage-order.component.html',\r\n  styleUrls: ['./manage-order.component.scss'],\r\n})\r\nexport class ManageOrderComponent implements OnInit {\r\n  displayedColumns: string[] = [\r\n    'name',\r\n    'category',\r\n    'price',\r\n    'quantity',\r\n    'total',\r\n    'edit',\r\n  ];\r\n  dataSource: any = [];\r\n  manageOrderForm: any = FormGroup;\r\n  categories: any = [];\r\n  products: any = [];\r\n  price: any;\r\n  totalAmount: number = 0;\r\n  responseMessage: any;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private categoryService: CategoryService,\r\n    private productService: ProductService,\r\n    private snackbarService: SnackbarService,\r\n    private billService: BillService,\r\n    private ngxService: NgxUiLoaderService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.ngxService.start();\r\n    this.getCategories();\r\n    this.manageOrderForm = this.formBuilder.group({\r\n      name: [\r\n        null,\r\n        [Validators.required, Validators.pattern(GlobalConstants.nameRegex)],\r\n      ],\r\n      email: [\r\n        null,\r\n        [Validators.required, Validators.pattern(GlobalConstants.emailRegex)],\r\n      ],\r\n      contactNumber: [\r\n        null,\r\n        [\r\n          Validators.required,\r\n          Validators.pattern(GlobalConstants.contactNumberRegex),\r\n        ],\r\n      ],\r\n      paymentMethod: [null, [Validators.required]],\r\n      product: [null, [Validators.required]],\r\n      category: [null, [Validators.required]],\r\n      quantity: [null, [Validators.required]],\r\n      price: [null, [Validators.required]],\r\n      total: [0, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  getCategories() {\r\n    this.categoryService.getCategory().subscribe(\r\n      (response: any) => {\r\n        this.ngxService.stop();\r\n        this.categories = response;\r\n      },\r\n      (error: any) => {\r\n        this.ngxService.stop();\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackbarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  getProductsByCategory(value: any) {\r\n    this.productService.getProductsByCategory(value.id).subscribe(\r\n      (response: any) => {\r\n        this.products = response;\r\n        this.manageOrderForm.controls['price'].setValue('');\r\n        this.manageOrderForm.controls['quantity'].setValue('');\r\n        this.manageOrderForm.controls['total'].setValue('');\r\n      },\r\n      (error: any) => {\r\n        this.ngxService.stop();\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackbarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  getProductsDetails(value: any) {\r\n    this.productService.getById(value.id).subscribe(\r\n      (response: any) => {\r\n        this.price = response.price;\r\n        this.manageOrderForm.controls['price'].setValue(response.price);\r\n        this.manageOrderForm.controls['quantity'].setValue('1');\r\n        this.manageOrderForm.controls['total'].setValue(this.price * 1);\r\n      },\r\n      (error: any) => {\r\n        this.ngxService.stop();\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackbarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  setQuantity(value: any) {\r\n    var temp = this.manageOrderForm.controls['quantity'].value;\r\n    if (temp > 0) {\r\n      this,\r\n        this.manageOrderForm.controls['total'].setValue(\r\n          this.manageOrderForm.controls['quantity'].value *\r\n            this.manageOrderForm.controls['price'].value\r\n        );\r\n    } else if (temp != '') {\r\n      this.manageOrderForm.controls['quantity'].setValue('1');\r\n      this,\r\n        this.manageOrderForm.controls['total'].setValue(\r\n          this.manageOrderForm.controls['quantity'].value *\r\n            this.manageOrderForm.controls['price'].value\r\n        );\r\n    }\r\n  }\r\n\r\n  validateProductAdd() {\r\n    if (\r\n      this.manageOrderForm.controls['total'].value === 0 ||\r\n      this.manageOrderForm.controls['total'].value === null ||\r\n      this.manageOrderForm.controls['quantity'].value <= 0\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  validateSubmit() {\r\n    if (\r\n      this.totalAmount === 0 ||\r\n      this.manageOrderForm.controls['name'].value === null ||\r\n      this.manageOrderForm.controls['email'].value === null ||\r\n      this.manageOrderForm.controls['contactNumber'].value === null ||\r\n      this.manageOrderForm.controls['paymentMethod'].value === null ||\r\n      !(\r\n        this.manageOrderForm.controls['contactNumber'].valid ||\r\n        !this.manageOrderForm.controls['email'].valid\r\n      )\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  add() {\r\n    var formData = this.manageOrderForm.value;\r\n    var productName = this.dataSource.find(\r\n      (e: { id: number }) => e.id == formData.product.id\r\n    );\r\n    if (productName === undefined) {\r\n      this.totalAmount = this.totalAmount + formData.total;\r\n      this.dataSource.push({\r\n        id: formData.product.id,\r\n        name: formData.product.name,\r\n        category: formData.category.name,\r\n        quantity: formData.quantity,\r\n        price: formData.price,\r\n        total: formData.total,\r\n      });\r\n      this.dataSource = [...this.dataSource];\r\n      this.snackbarService.openSnackBar(\r\n        GlobalConstants.productAdded,\r\n        'success'\r\n      );\r\n    } else {\r\n      this.snackbarService.openSnackBar(\r\n        GlobalConstants.productExistError,\r\n        GlobalConstants.error\r\n      );\r\n    }\r\n  }\r\n\r\n  handleDeleteAction(value: any, element: any) {\r\n    this.totalAmount = this.totalAmount - element.total;\r\n    this.dataSource.splice(value, 1);\r\n    this.dataSource = [...this.dataSource];\r\n  }\r\n\r\n  submitAction() {\r\n    this.ngxService.start();\r\n    var formData = this.manageOrderForm.value;\r\n    var data = {\r\n      name: formData.name,\r\n      email: formData.email,\r\n      contactNumber: formData.contactNumber,\r\n      paymentMethod: formData.paymentMethod,\r\n      totalAmount: this.totalAmount,\r\n      productDetails: JSON.stringify(this.dataSource),\r\n    };\r\n    this.billService.generateReport(data).subscribe(\r\n      (response: any) => {\r\n        this.downloadFile(response?.uuid);\r\n        this.manageOrderForm.reset();\r\n        this.dataSource = [];\r\n        this.totalAmount = 0;\r\n      },\r\n      (error: any) => {\r\n        this.ngxService.stop();\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackbarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  downloadFile(fileName: any) {\r\n    var data = {\r\n      uuid: fileName,\r\n    };\r\n    this.billService.getPdf(data).subscribe((response: any) => {\r\n      saveAs(response, fileName + '.pdf');\r\n      this.ngxService.stop();\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n    <b><span>Manage Order</span></b>\r\n    <button mat-flat-button color=\"primary\" class=\"float-right\" [disabled]=\"validateSubmit()\"\r\n        (click)=\"submitAction()\">Submit & Get Bill</button>\r\n</mat-card>\r\n<hr>\r\n<mat-card>\r\n    <b><span>Customer Details</span></b>\r\n    <form [formGroup]=\"manageOrderForm\">\r\n        <div fxFlex fxLayout=\"column\">\r\n            <div fxLayout=\"row wrap\">\r\n                <mat-form-field appearance=\"fill\" fxFlex>\r\n                    <mat-label>Name</mat-label>\r\n                    <input matInput formControlName=\"name\" required>\r\n                    <mat-error *ngIf=\"manageOrderForm.controls.name.touched && manageOrderForm.controls.name.invalid\">\r\n                        <span *ngIf=\"manageOrderForm.controls.name.errors.required\">This field is mandatory.</span>\r\n                        <span *ngIf=\"manageOrderForm.controls.name.errors.pattern\">This field is invalid.</span>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"fill\" fxFlex>\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput formControlName=\"email\" required>\r\n                    <mat-error *ngIf=\"manageOrderForm.controls.email.touched && manageOrderForm.controls.email.invalid\">\r\n                        <span *ngIf=\"manageOrderForm.controls.email.errors.required\">This field is mandatory.</span>\r\n                        <span *ngIf=\"manageOrderForm.controls.email.errors.pattern\">This field is invalid.</span>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"fill\" fxFlex>\r\n                    <mat-label>Contact Number</mat-label>\r\n                    <input matInput formControlName=\"contactNumber\" required>\r\n                    <mat-error\r\n                        *ngIf=\"manageOrderForm.controls.contactNumber.touched && manageOrderForm.controls.contactNumber.invalid\">\r\n                        <span *ngIf=\"manageOrderForm.controls.contactNumber.errors.required\">This field is\r\n                            mandatory.</span>\r\n                        <span *ngIf=\"manageOrderForm.controls.contactNumber.errors.pattern\">This field is\r\n                            invalid.</span>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"fill\" fxFlex>\r\n                    <mat-label>Payment Method</mat-label>\r\n                    <mat-select matInput formControlName=\"paymentMethod\" required>\r\n                        <mat-option value=\"cash\">Cash</mat-option>\r\n                        <mat-option value=\"creditCard\">Credit Card</mat-option>\r\n                        <mat-option value=\"debitCard\">Debit Card</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"manageOrderForm.controls.email.touched && manageOrderForm.controls.email.invalid\">\r\n                        <span *ngIf=\"manageOrderForm.controls.email.errors.required\">This field is mandatory.</span>\r\n                        <span *ngIf=\"manageOrderForm.controls.email.errors.pattern\">This field is invalid.</span>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</mat-card>\r\n<hr>\r\n<mat-card>\r\n    <b><span>Select Product:</span></b>\r\n    <form [formGroup]=\"manageOrderForm\">\r\n        <div fxFlex fxLayout=\"column\">\r\n            <div fxLayout=\"row wrap\">\r\n                <mat-form-field appearance=\"fill\" fxFlex>\r\n                    <mat-label>Category</mat-label>\r\n                    <mat-select formControlName=\"category\" (selectionChange)=\"getProductsByCategory($event.value)\">\r\n                        <mat-option *ngFor=\"let category of categories\"\r\n                            [value]=\"category\">{{category.name}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"fill\" fxFlex>\r\n                    <mat-label>Product</mat-label>\r\n                    <mat-select formControlName=\"product\" (selectionChange)=\"getProductsDetails($event.value)\">\r\n                        <mat-option *ngFor=\"let product of products\" [value]=\"product\">{{product.name}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"fill\" fxFlex>\r\n                    <mat-label>Price</mat-label>\r\n                    <input matInput formControlName=\"price\" required readonly>\r\n                    <mat-error *ngIf=\"manageOrderForm.controls.price.touched && manageOrderForm.controls.price.invalid\">\r\n                        <span *ngIf=\"manageOrderForm.controls.price.errors.required\">This field is mandatory.</span>\r\n                        <span *ngIf=\"manageOrderForm.controls.price.errors.pattern\">This field is invalid.</span>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"fill\" fxFlex>\r\n                    <mat-label>Quantity</mat-label>\r\n                    <input matInput formControlName=\"quantity\" required (keyup)=\"setQuantity($event)\" #input>\r\n                    <mat-error\r\n                        *ngIf=\"manageOrderForm.controls.quantity.touched && manageOrderForm.controls.quantity.invalid\">\r\n                        <span *ngIf=\"manageOrderForm.controls.quantity.errors.required\">This field is mandatory.</span>\r\n                        <span *ngIf=\"manageOrderForm.controls.quantity.errors.pattern\">This field is invalid.</span>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"fill\" fxFlex>\r\n                    <mat-label>Total</mat-label>\r\n                    <input matInput formControlName=\"total\" required readonly>\r\n                    <mat-error *ngIf=\"manageOrderForm.controls.total.touched && manageOrderForm.controls.total.invalid\">\r\n                        <span *ngIf=\"manageOrderForm.controls.total.errors.required\">This field is mandatory.</span>\r\n                        <span *ngIf=\"manageOrderForm.controls.total.errors.pattern\">This field is invalid.</span>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </form>\r\n\r\n    <div>\r\n        <button mat-flat-button color=\"primary\" [disabled]=\"validateProductAdd()\" (click)=\"add()\">Add</button>\r\n        <button mat-flat-button color=\"primary\" class=\"float-right\">Total Amount: {{totalAmount}}</button>\r\n    </div>\r\n\r\n</mat-card>\r\n<hr>\r\n<div class=\"responsive_table\">\r\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n        <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef>Name</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"category\">\r\n            <th mat-header-cell *matHeaderCellDef>Category</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.category}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"price\">\r\n            <th mat-header-cell *matHeaderCellDef>Price</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.price}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"quantity\">\r\n            <th mat-header-cell *matHeaderCellDef>Quantity</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.quantity}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"total\">\r\n            <th mat-header-cell *matHeaderCellDef>Total</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.total}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"edit\">\r\n            <th mat-header-cell *matHeaderCellDef>Delete</th>\r\n            <td mat-cell *matCellDef=\"let element; let i = index\" class=\"action-link\">\r\n                <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"handleDeleteAction(i, element)\">\r\n                    <mat-icon>delete</mat-icon>\r\n                </button>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { SnackbarService } from 'src/app/services/snackbar.service';\r\nimport { GlobalConstants } from 'src/app/shared/global-constants';\r\nimport { CategoryComponent } from '../dialog/category/category.component';\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\r\n\r\n@Component({\r\n  selector: 'app-manage-category',\r\n  templateUrl: './manage-category.component.html',\r\n  styleUrls: ['./manage-category.component.scss'],\r\n})\r\nexport class ManageCategoryComponent implements OnInit {\r\n  displayedColumns: string[] = ['name', 'edit'];\r\n  dataSource: any;\r\n  responseMessage: any;\r\n\r\n  constructor(\r\n    private categoryService: CategoryService,\r\n    private ngxService: NgxUiLoaderService,\r\n    private dialog: MatDialog,\r\n    private snackbarService: SnackbarService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.ngxService.start();\r\n    this.tableData();\r\n  }\r\n\r\n  tableData() {\r\n    this.categoryService.getCategory().subscribe(\r\n      (response: any) => {\r\n        this.ngxService.stop();\r\n        this.dataSource = new MatTableDataSource(response);\r\n      },\r\n      (error: any) => {\r\n        this.ngxService.stop();\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackbarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  handleEditAction(values: any) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.data = {\r\n      action: 'Edit',\r\n      data: values,\r\n    };\r\n    dialogConfig.width = '850px';\r\n    const dialogRef = this.dialog.open(CategoryComponent, dialogConfig);\r\n    this.router.events.subscribe(() => {\r\n      dialogRef.close();\r\n    });\r\n    const sub = dialogRef.componentInstance.onEditCategory.subscribe(\r\n      (response) => {\r\n        this.tableData();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleAddAction() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.data = {\r\n      action: 'Add',\r\n    };\r\n    dialogConfig.width = '850px';\r\n    const dialogRef = this.dialog.open(CategoryComponent, dialogConfig);\r\n    this.router.events.subscribe(() => {\r\n      dialogRef.close();\r\n    });\r\n    const sub = dialogRef.componentInstance.onAddCategory.subscribe(\r\n      (response) => {\r\n        this.tableData();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-card>\r\n    <b><span>Manage Category</span></b>\r\n    <button mat-flat-button color=\"primary\" class=\"float-right\" (click)=\"handleAddAction()\">Add Category</button>\r\n</mat-card>\r\n\r\n<hr>\r\n<mat-card>\r\n    <mat-form-field appearance=\"fill\">\r\n        <mat-label>Filter</mat-label>\r\n        <input matInput (keyup)=\"applyFilter($event)\" #input>\r\n    </mat-form-field>\r\n</mat-card>\r\n<hr>\r\n<div class=\"responsive_table\">\r\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n        <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef>Name</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"edit\">\r\n            <th mat-header-cell *matHeaderCellDef>Action</th>\r\n            <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\r\n                <button mat-icon-button color=\"primary\" matTooltip=\"Edit\" (click)=\"handleEditAction(element)\">\r\n                    <mat-icon>edit</mat-icon>\r\n                </button>\r\n            </td>\r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n    </table>\r\n</div>","import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\r\nimport { SnackbarService } from 'src/app/services/snackbar.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { GlobalConstants } from 'src/app/shared/global-constants';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss'],\r\n})\r\nexport class UserComponent implements OnInit {\r\n  onAddCategory = new EventEmitter();\r\n  onEditCategory = new EventEmitter();\r\n  userForm: any = FormGroup;\r\n  dialogAction: any = 'Edit';\r\n  action: any = 'Edit';\r\n  responseMessage: any;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\r\n    private formBuilder: FormBuilder,\r\n    private userService: UserService,\r\n    public dialogRef: MatDialogRef<UserComponent>,\r\n    private snackbarService: SnackbarService,\r\n    private ngxService: NgxUiLoaderService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userForm = this.formBuilder.group({\r\n      contactNumber: [\r\n        null,\r\n        [\r\n          Validators.required,\r\n          Validators.pattern(GlobalConstants.contactNumberRegex),\r\n        ],\r\n      ],\r\n    });\r\n    this.userForm.patchValue(this.dialogData.data);\r\n  }\r\n\r\n  edit() {\r\n    this.ngxService.start();\r\n    var formData = this.userForm.value;\r\n    var data = {\r\n      id: this.dialogData.data.id,\r\n      contactNumber: formData.contactNumber,\r\n    };\r\n    this.userService.updateContactNumber(data).subscribe(\r\n      (response: any) => {\r\n        this.ngxService.stop();\r\n        this.dialogRef.close();\r\n        this.onEditCategory.emit();\r\n        this.responseMessage = response.message;\r\n        this.snackbarService.openSnackBar(this.responseMessage, 'success');\r\n      },\r\n      (error: any) => {\r\n        this.ngxService.stop();\r\n        this.dialogRef.close();\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackbarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n    <mat-toolbar-row fxLayout=\"row\">\r\n        <span class=\"title-center\">{{dialogData.action}} User</span>\r\n    </mat-toolbar-row>\r\n</mat-toolbar>\r\n<mat-dialog-content class=\"mat-typography\">\r\n    <form [formGroup]=\"userForm\">\r\n        <div fxFlex fxLayout=\"column\">\r\n            <div fxLayout=\"row-wrap\">\r\n                <mat-form-field appearance=\"fill\" fxFlex>\r\n                    <mat-label>Contact Number</mat-label>\r\n                    <input matInput formControlName=\"contactNumber\" required>\r\n                    <mat-error\r\n                        *ngIf=\"userForm.controls.contactNumber.touched && userForm.controls.contactNumber.invalid\">\r\n                        <span *ngIf=\"userForm.controls.contactNumber.errors.required\">This field is mandatory.</span>\r\n                        <span *ngIf=\"userForm.controls.contactNumber.errors.pattern\">This field is invalid.</span>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"center\">\r\n    <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"edit()\"\r\n        [disabled]=\"!(userForm.valid && userForm.dirty)\">{{action}}</button>\r\n    <button mat-raised-button color=\"primary\" mat-dialog-close=\"\">Close</button>\r\n</mat-dialog-actions>","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { MaterialRoutes } from './material.routing';\r\nimport { MaterialModule } from '../shared/material-module';\r\nimport { ViewBillProductsComponent } from './dialog/view-bill-products/view-bill-products.component';\r\nimport { ConfirmationComponent } from './dialog/confirmation/confirmation.component';\r\nimport { ChangePasswordComponent } from './dialog/change-password/change-password.component';\r\nimport { ManageCategoryComponent } from './manage-category/manage-category.component';\r\nimport { CategoryComponent } from './dialog/category/category.component';\r\nimport { ManageProductComponent } from './manage-product/manage-product.component';\r\nimport { ProductComponent } from './dialog/product/product.component';\r\nimport { ManageOrderComponent } from './manage-order/manage-order.component';\r\nimport { ViewBillComponent } from './view-bill/view-bill.component';\r\nimport { ManageUserComponent } from './manage-user/manage-user.component';\r\nimport { UserComponent } from './dialog/user/user.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(MaterialRoutes),\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    CdkTableModule\r\n  ],\r\n  providers: [],\r\n  declarations: [\r\n    ViewBillProductsComponent,\r\n    ConfirmationComponent,\r\n    ChangePasswordComponent,\r\n    ManageCategoryComponent,\r\n    CategoryComponent,\r\n    ManageProductComponent,\r\n    ProductComponent,\r\n    ManageOrderComponent,\r\n    ViewBillComponent,\r\n    ManageUserComponent,\r\n    UserComponent    \r\n  ]\r\n})\r\nexport class MaterialComponentsModule {}\r\n","import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { SnackbarService } from 'src/app/services/snackbar.service';\r\nimport { GlobalConstants } from 'src/app/shared/global-constants';\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  styleUrls: ['./category.component.scss'],\r\n})\r\nexport class CategoryComponent implements OnInit {\r\n  onAddCategory = new EventEmitter();\r\n  onEditCategory = new EventEmitter();\r\n  categoryForm: any = FormGroup;\r\n  dialogAction: any = 'Add';\r\n  action: any = 'Add';\r\n  responseMessage: any;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\r\n    private formBuilder: FormBuilder,\r\n    private categoryService: CategoryService,\r\n    public dialogRef: MatDialogRef<CategoryComponent>,\r\n    private snackbarService: SnackbarService,\r\n    private ngxService: NgxUiLoaderService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.categoryForm = this.formBuilder.group({\r\n      name: [null, [Validators.required]],\r\n    });\r\n    if (this.dialogData.action === 'Edit') {\r\n      this.dialogAction = 'Edit';\r\n      this.action = 'Update';\r\n      this.categoryForm.patchValue(this.dialogData.data);\r\n    }\r\n  }\r\n\r\n  handleSubmit() {\r\n    if (this.dialogAction === 'Edit') {\r\n      this.edit();\r\n    } else {\r\n      this.add();\r\n    }\r\n  }\r\n\r\n  add() {\r\n    this.ngxService.start();\r\n    var formData = this.categoryForm.value;\r\n    var data = {\r\n      name: formData.name,\r\n    };\r\n    this.categoryService.add(data).subscribe(\r\n      (response: any) => {\r\n        this.ngxService.stop();\r\n        this.dialogRef.close();\r\n        this.onAddCategory.emit();\r\n        this.responseMessage = response.message;\r\n        this.snackbarService.openSnackBar(this.responseMessage, 'success');\r\n      },\r\n      (error: any) => {\r\n        this.ngxService.stop();\r\n        this.dialogRef.close();\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackbarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  edit() {\r\n    this.ngxService.start();\r\n    var formData = this.categoryForm.value;\r\n    var data = {\r\n      id: this.dialogData.data.id,\r\n      name: formData.name,\r\n    };\r\n    this.categoryService.update(data).subscribe(\r\n      (response: any) => {\r\n        this.ngxService.stop();\r\n        this.dialogRef.close();\r\n        this.onEditCategory.emit();\r\n        this.responseMessage = response.message;\r\n        this.snackbarService.openSnackBar(this.responseMessage, 'success');\r\n      },\r\n      (error: any) => {\r\n        this.ngxService.stop();\r\n        this.dialogRef.close();\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackbarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n    <mat-toolbar-row fxLayout=\"row\">\r\n        <span class=\"title-center\">{{dialogData.action}} Category</span>\r\n    </mat-toolbar-row>\r\n</mat-toolbar>\r\n<mat-dialog-content class=\"mat-typography\">\r\n    <form [formGroup]=\"categoryForm\">\r\n        <div fxFlex fxLayout=\"column\">\r\n            <div fxLayout=\"row-wrap\">\r\n                <mat-form-field appearance=\"fill\" fxFlex>\r\n                    <mat-label>Name</mat-label>\r\n                    <input matInput formControlName=\"name\" required>\r\n                    <mat-error *ngIf=\"categoryForm.controls.name.touched && categoryForm.controls.name.invalid\">\r\n                        <span *ngIf=\"categoryForm.controls.name.errors.required\">This field is mandatory.</span>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"center\">\r\n    <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"handleSubmit()\"\r\n        [disabled]=\"!(categoryForm.valid && categoryForm.dirty)\">{{action}}</button>\r\n    <button mat-raised-button color=\"primary\" mat-dialog-close=\"\">Close</button>\r\n</mat-dialog-actions>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-view-bill-products',\r\n  templateUrl: './view-bill-products.component.html',\r\n  styleUrls: ['./view-bill-products.component.scss'],\r\n})\r\nexport class ViewBillProductsComponent implements OnInit {\r\n  displayedColumns: string[] = [\r\n    'name',\r\n    'category',\r\n    'price',\r\n    'quantity',\r\n    'total',\r\n  ];\r\n  dataSource: any;\r\n  data: any;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\r\n    public dialogRef: MatDialogRef<ViewBillProductsComponent>\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.data = this.dialogData.data;\r\n    this.dataSource = this.dialogData.data.productDetails;\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n    <mat-toolbar-row fxLayout=\"row\">\r\n        <span class=\"title-center\">View Bill</span>\r\n        <span class=\"spacer\"></span>\r\n        <button class=\"mat-dialog-close\" mat-icon-button mat-dialog-close>\r\n            <mat-icon>cancel</mat-icon>\r\n        </button>\r\n    </mat-toolbar-row>\r\n</mat-toolbar>\r\n\r\n<mat-dialog-content class=\"mat-typography\">\r\n    <table id=\"customers\">\r\n        <tr>\r\n            <td><b>Name: </b>{{data.name}}</td>\r\n            <td><b>Email: </b>{{data.email}}</td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td><b>Contact Number: </b>{{data.contactNumber}}</td>\r\n            <td><b>Payment Method: </b>{{data.paymentMethod}}</td>\r\n        </tr>\r\n    </table>\r\n\r\n    <div class=\"responsive_table\">\r\n        <br>\r\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n            <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef>Name</th>\r\n                <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"category\">\r\n                <th mat-header-cell *matHeaderCellDef>Category</th>\r\n                <td mat-cell *matCellDef=\"let element\">{{element.category}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"price\">\r\n                <th mat-header-cell *matHeaderCellDef>Price</th>\r\n                <td mat-cell *matCellDef=\"let element\">{{element.price}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"quantity\">\r\n                <th mat-header-cell *matHeaderCellDef>Quantity</th>\r\n                <td mat-cell *matCellDef=\"let element\">{{element.quantity}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"total\">\r\n                <th mat-header-cell *matHeaderCellDef>Total</th>\r\n                <td mat-cell *matCellDef=\"let element\">{{element.total}}</td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n        </table>\r\n    </div>\r\n</mat-dialog-content>","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductService {\r\n  url = environment.apiUrl;\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  add(data: any) {\r\n    return this.httpClient.post(this.url + '/product/add/', data, {\r\n      headers: new HttpHeaders().set('Content-Type', 'application/json'),\r\n    });\r\n  }\r\n\r\n  update(data: any) {\r\n    return this.httpClient.patch(this.url + '/product/update/', data, {\r\n      headers: new HttpHeaders().set('Content-Type', 'application/json'),\r\n    });\r\n  }\r\n\r\n  getProducts() {\r\n    return this.httpClient.get(this.url + '/product/get/');\r\n  }\r\n\r\n  updateStatus(data: any) {\r\n    return this.httpClient.patch(this.url + '/product/updateStatus/', data, {\r\n      headers: new HttpHeaders().set('Content-Type', 'application/json'),\r\n    });\r\n  }\r\n\r\n  delete(id: any) {\r\n    return this.httpClient.delete(this.url + '/product/delete/' + id, {\r\n      headers: new HttpHeaders().set('Content-Type', 'application/json'),\r\n    });\r\n  }\r\n\r\n  getProductsByCategory(id: any) {\r\n    return this.httpClient.get(this.url + '/product/getByCategory/' + id);\r\n  }\r\n\r\n  getById(id: any) {\r\n    return this.httpClient.get(this.url + '/product/getById/' + id);\r\n  }\r\n}\r\n","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SnackbarService } from 'src/app/services/snackbar.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { GlobalConstants } from 'src/app/shared/global-constants';\r\nimport { UserComponent } from '../dialog/user/user.component';\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmationComponent } from '../dialog/confirmation/confirmation.component';\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\r\n\r\n@Component({\r\n  selector: 'app-manage-user',\r\n  templateUrl: './manage-user.component.html',\r\n  styleUrls: ['./manage-user.component.scss'],\r\n})\r\nexport class ManageUserComponent implements OnInit {\r\n  displayedColumns: string[] = ['name', 'email', 'contactNumber', 'status'];\r\n  dataSource: any;\r\n  responseMessage: any;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private dialog: MatDialog,\r\n    private snackbarService: SnackbarService,\r\n    private ngxService: NgxUiLoaderService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.ngxService.start();\r\n    this.tableData();\r\n  }\r\n\r\n  tableData() {\r\n    this.userService.getUsers().subscribe(\r\n      (response: any) => {\r\n        this.ngxService.stop();\r\n        this.dataSource = new MatTableDataSource(response);\r\n      },\r\n      (error: any) => {\r\n        this.ngxService.stop();\r\n        console.log(error);\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackbarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  handleChangeAction(status: any, id: any) {\r\n    this.ngxService.start();\r\n    var data = {\r\n      status: status.toString(),\r\n      id: id,\r\n    };\r\n    this.userService.update(data).subscribe(\r\n      (response: any) => {\r\n        this.ngxService.stop();\r\n        this.responseMessage = response?.message;\r\n        this.snackbarService.openSnackBar(this.responseMessage, 'success');\r\n      },\r\n      (error: any) => {\r\n        this.ngxService.stop();\r\n        console.log(error);\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackbarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  handleEditAction(values: any) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.data = {\r\n      action: 'Edit',\r\n      data: values,\r\n    };\r\n    dialogConfig.width = '850px';\r\n    const dialogRef = this.dialog.open(UserComponent, dialogConfig);\r\n    this.router.events.subscribe(() => {\r\n      dialogRef.close();\r\n    });\r\n    const sub = dialogRef.componentInstance.onEditCategory.subscribe(\r\n      (response) => {\r\n        this.tableData();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleDeleteAction(values: any) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.data = {\r\n      message: 'delete ' + values.name + ' user',\r\n    };\r\n    const dialogRef = this.dialog.open(ConfirmationComponent, dialogConfig);\r\n    const sub = dialogRef.componentInstance.onEmitStatusChange.subscribe(\r\n      (response) => {\r\n        this.ngxService.start();\r\n        this.deleteUser(values.id);\r\n        dialogRef.close();\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteUser(id: any) {\r\n    this.userService.delete(id).subscribe(\r\n      (response: any) => {\r\n        this.ngxService.stop();\r\n        this.tableData();\r\n        this.responseMessage = response?.message;\r\n        this.snackbarService.openSnackBar(this.responseMessage, 'success');\r\n      },\r\n      (error: any) => {\r\n        this.ngxService.stop();\r\n        console.log(error);\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackbarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-card>\r\n    <b><span>Manage User</span></b>\r\n</mat-card>\r\n<hr>\r\n<mat-card>\r\n    <mat-form-field appearance=\"fill\">\r\n        <mat-label>Filter</mat-label>\r\n        <input matInput (keyup)=\"applyFilter($event)\" #input>\r\n    </mat-form-field>\r\n</mat-card>\r\n<hr>\r\n<div class=\"responsive_table\">\r\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n        <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef>Name</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"email\">\r\n            <th mat-header-cell *matHeaderCellDef>Email</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.email}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"contactNumber\">\r\n            <th mat-header-cell *matHeaderCellDef>Contact Number</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.contactNumber}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"status\">\r\n            <th mat-header-cell *matHeaderCellDef>Action</th>\r\n            <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\r\n                <button mat-icon-button color=\"primary\" matTooltip=\"Edit\" (click)=\"handleEditAction(element)\">\r\n                    <mat-icon>edit</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"handleDeleteAction(element)\">\r\n                    <mat-icon>delete</mat-icon>\r\n                </button>\r\n\r\n                <mat-slide-toggle (change)=\"handleChangeAction($event.checked, element.id)\"\r\n                    matTooltip=\"Activate or Deactivate User\" [checked]=\"element.status\">\r\n                </mat-slide-toggle>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BillService {\r\n  url = environment.apiUrl;\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  generateReport(data: any) {\r\n    return this.httpClient.post(this.url + '/bill/generateReport/', data, {\r\n      headers: new HttpHeaders().set('Content-Type', 'application/json'),\r\n    });\r\n  }\r\n\r\n  getPdf(data: any): Observable<Blob> {\r\n    return this.httpClient.post(this.url + '/bill/getPdf', data, {\r\n      responseType: 'blob',\r\n    });\r\n  }\r\n\r\n  getBills() {\r\n    return this.httpClient.get(this.url + '/bill/getBills');\r\n  }\r\n\r\n  delete(id: any) {\r\n    return this.httpClient.delete(this.url + '/bill/delete/' + id, {\r\n      headers: new HttpHeaders().set('Content-Type', 'applicaton/json'),\r\n    });\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CategoryService {\r\n  url = environment.apiUrl;\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  add(data: any) {\r\n    return this.httpClient.post(this.url + '/category/add/', data, {\r\n      headers: new HttpHeaders().set('Content-Type', 'application/json'),\r\n    });\r\n  }\r\n\r\n  update(data: any) {\r\n    return this.httpClient.patch(this.url + '/category/update/', data, {\r\n      headers: new HttpHeaders().set('Content-Type', 'application/json'),\r\n    });\r\n  }\r\n\r\n  getCategory() {\r\n    return this.httpClient.get(this.url + '/category/get/');\r\n  }\r\n}\r\n","import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { SnackbarService } from 'src/app/services/snackbar.service';\r\nimport { GlobalConstants } from 'src/app/shared/global-constants';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.scss'],\r\n})\r\nexport class ProductComponent implements OnInit {\r\n  onAddProduct = new EventEmitter();\r\n  onEditProduct = new EventEmitter();\r\n  productForm: any = FormGroup;\r\n  dialogAction = 'Add';\r\n  action: any = 'Add';\r\n  responseMessage: any;\r\n  categories: any = [];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\r\n    private formBuilder: FormBuilder,\r\n    private productService: ProductService,\r\n    public dialogRef: MatDialogRef<ProductComponent>,\r\n    private categoryService: CategoryService,\r\n    private snackbarService: SnackbarService,\r\n    private ngxService: NgxUiLoaderService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.productForm = this.formBuilder.group({\r\n      name: [\r\n        null,\r\n        [Validators.required, Validators.pattern(GlobalConstants.nameRegex)],\r\n      ],\r\n      categoryId: [null, Validators.required],\r\n      price: [null, Validators.required],\r\n      description: [null, Validators.required],\r\n    });\r\n\r\n    if (this.dialogData.action === 'Edit') {\r\n      this.dialogAction = 'Edit';\r\n      this.action = 'Update';\r\n      this.productForm.patchValue(this.dialogData.data);\r\n    }\r\n    this.getCategories();\r\n  }\r\n\r\n  getCategories() {\r\n    this.categoryService.getCategory().subscribe(\r\n      (response: any) => {\r\n        this.categories = response;\r\n      },\r\n      (error: any) => {\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackbarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  handleSubmit() {\r\n    if (this.dialogAction === 'Edit') {\r\n      this.edit();\r\n    } else {\r\n      this.add();\r\n    }\r\n  }\r\n\r\n  add() {\r\n    this.ngxService.start();\r\n    var formData = this.productForm.value;\r\n    var data = {\r\n      name: formData.name,\r\n      categoryId: formData.categoryId,\r\n      price: formData.price,\r\n      description: formData.description,\r\n    };\r\n    this.productService.add(data).subscribe(\r\n      (response: any) => {\r\n        this.ngxService.stop();\r\n        this.dialogRef.close();\r\n        this.onAddProduct.emit();\r\n        this.responseMessage = response.message;\r\n        this.snackbarService.openSnackBar(this.responseMessage, 'message');\r\n      },\r\n      (error: any) => {\r\n        this.ngxService.stop();\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackbarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  edit() {\r\n    this.ngxService.start();\r\n    var formData = this.productForm.value;\r\n    var data = {\r\n      id: this.dialogData.data.id,\r\n      name: formData.name,\r\n      categoryId: formData.categoryId,\r\n      price: formData.price,\r\n      description: formData.description,\r\n    };\r\n    this.productService.update(data).subscribe(\r\n      (response: any) => {\r\n        this.ngxService.stop();\r\n        this.dialogRef.close();\r\n        this.onEditProduct.emit();\r\n        this.responseMessage = response.message;\r\n        this.snackbarService.openSnackBar(this.responseMessage, 'message');\r\n      },\r\n      (error: any) => {\r\n        this.ngxService.stop();\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackbarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n    <mat-toolbar-row fxLayout=\"row\">\r\n        <span class=\"title-center\">{{dialogData.action}} Product</span>\r\n    </mat-toolbar-row>\r\n</mat-toolbar>\r\n\r\n<mat-dialog-content class=\"mat-typography\">\r\n    <form [formGroup]=\"productForm\">\r\n        <div fxFlex fxLayout=\"column\">\r\n            <div fxLayout=\"row wrap\">\r\n                <mat-form-field appearance=\"fill\" fxFlex>\r\n                    <mat-label>Name</mat-label>\r\n                    <input matInput formControlName=\"name\" required>\r\n                    <mat-error *ngIf=\"productForm.controls.name.touched && productForm.controls.name.invalid\">\r\n                        <span *ngIf=\"productForm.controls.name.errors.required\">This field is mandatory.</span>\r\n                        <span *ngIf=\"productForm.controls.name.errors.pattern\">This field is invalid.</span>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row wrap\">\r\n                <mat-form-field appearance=\"fill\" fxFlex>\r\n                    <mat-label>Price</mat-label>\r\n                    <input matInput formControlName=\"price\" required>\r\n                    <mat-error *ngIf=\"productForm.controls.price.touched && productForm.controls.price.invalid\">\r\n                        <span *ngIf=\"productForm.controls.price.errors.required\">This field is mandatory.</span>\r\n                        <span *ngIf=\"productForm.controls.price.errors.pattern\">This field is invalid.</span>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"fill\" fxFlex>\r\n                    <mat-label>Category</mat-label>\r\n                    <mat-select formControlName=\"categoryId\">\r\n                        <mat-option *ngFor=\"let category of categories\"\r\n                            [value]=\"category.id\">{{category.name}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row wrap\">\r\n                <mat-form-field appearance=\"fill\" fxFlex>\r\n                    <mat-label>Description</mat-label>\r\n                    <input matInput formControlName=\"description\" required>\r\n                    <mat-error\r\n                        *ngIf=\"productForm.controls.description.touched && productForm.controls.description.invalid\">\r\n                        <span *ngIf=\"productForm.controls.description.errors.required\">This field is mandatory.</span>\r\n                        <span *ngIf=\"productForm.controls.description.errors.pattern\">This field is invalid.</span>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"center\">\r\n    <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"handleSubmit()\"\r\n        [disabled]=\"!(productForm.valid && productForm.dirty)\">{{action}}</button>\r\n    <button mat-raised-button color=\"primary\" mat-dialog-close>Close</button>\r\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { SnackbarService } from 'src/app/services/snackbar.service';\r\nimport { GlobalConstants } from 'src/app/shared/global-constants';\r\nimport { ProductComponent } from '../dialog/product/product.component';\r\nimport { ConfirmationComponent } from '../dialog/confirmation/confirmation.component';\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\r\n\r\n@Component({\r\n  selector: 'app-manage-product',\r\n  templateUrl: './manage-product.component.html',\r\n  styleUrls: ['./manage-product.component.scss'],\r\n})\r\nexport class ManageProductComponent implements OnInit {\r\n  displayedColumns: string[] = [\r\n    'name',\r\n    'categoryName',\r\n    'description',\r\n    'price',\r\n    'edit',\r\n  ];\r\n  dataSource: any;\r\n  responseMessage: any;\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private ngxService: NgxUiLoaderService,\r\n    private dialog: MatDialog,\r\n    private snackbarService: SnackbarService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.ngxService.start();\r\n    this.tableData();\r\n  }\r\n\r\n  tableData() {\r\n    this.productService.getProducts().subscribe(\r\n      (response: any) => {\r\n        this.ngxService.stop();\r\n        this.dataSource = new MatTableDataSource(response);\r\n      },\r\n      (error: any) => {\r\n        this.ngxService.stop();\r\n        console.log(error);\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackbarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  handleAddAction() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.data = {\r\n      action: 'Add',\r\n    };\r\n    dialogConfig.width = '850px';\r\n    const dialogRef = this.dialog.open(ProductComponent, dialogConfig);\r\n    this.router.events.subscribe(() => {\r\n      dialogRef.close();\r\n    });\r\n    const sub = dialogRef.componentInstance.onAddProduct.subscribe(\r\n      (response) => {\r\n        this.tableData();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleEditAction(values: any) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.data = {\r\n      action: 'Edit',\r\n      data: values,\r\n    };\r\n    dialogConfig.width = '850px';\r\n    const dialogRef = this.dialog.open(ProductComponent, dialogConfig);\r\n    this.router.events.subscribe(() => {\r\n      dialogRef.close();\r\n    });\r\n    const sub = dialogRef.componentInstance.onEditProduct.subscribe(\r\n      (response) => {\r\n        this.tableData();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleDeleteAction(values: any) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.data = {\r\n      message: 'delete ' + values.name + ' product',\r\n    };\r\n    const dialogRef = this.dialog.open(ConfirmationComponent, dialogConfig);\r\n    const sub = dialogRef.componentInstance.onEmitStatusChange.subscribe(\r\n      (response) => {\r\n        this.ngxService.start();\r\n        this.deleteProduct(values.id);\r\n        dialogRef.close();\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteProduct(id: any) {\r\n    this.productService.delete(id).subscribe(\r\n      (response: any) => {\r\n        this.ngxService.stop();\r\n        this.tableData();\r\n        this.responseMessage = response?.message;\r\n        this.snackbarService.openSnackBar(this.responseMessage, 'success');\r\n      },\r\n      (error: any) => {\r\n        this.ngxService.stop();\r\n        console.log(error);\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackbarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  onChange(status: any, id: any) {\r\n    this.ngxService.start();\r\n    var data = {\r\n      status: status.toString(),\r\n      id: id,\r\n    };\r\n    this.productService.updateStatus(data).subscribe(\r\n      (response: any) => {\r\n        this.ngxService.stop();\r\n        this.responseMessage = response?.message;\r\n        this.snackbarService.openSnackBar(this.responseMessage, 'success');\r\n      },\r\n      (error: any) => {\r\n        this.ngxService.stop();\r\n        console.log(error);\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackbarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-card>\r\n    <b><span>Manage Product</span></b>\r\n    <button mat-flat-button color=\"primary\" class=\"float-right\" (click)=\"handleAddAction()\">Add Product</button>\r\n</mat-card>\r\n<hr>\r\n<mat-card>\r\n    <mat-form-field appearance=\"fill\">\r\n        <mat-label>Filter</mat-label>\r\n        <input matInput (keyup)=\"applyFilter($event)\" #input>\r\n    </mat-form-field>\r\n</mat-card>\r\n<hr>\r\n<div class=\"responsive_table\">\r\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n        <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef>Name</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"categoryName\">\r\n            <th mat-header-cell *matHeaderCellDef>Category</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.categoryName}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"description\">\r\n            <th mat-header-cell *matHeaderCellDef>Description</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.description}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"price\">\r\n            <th mat-header-cell *matHeaderCellDef>Price</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.price}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"edit\">\r\n            <th mat-header-cell *matHeaderCellDef>Action</th>\r\n            <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\r\n                <button mat-icon-button color=\"primary\" matTooltip=\"Edit\" (click)=\"handleEditAction(element)\">\r\n                    <mat-icon>edit</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"handleDeleteAction(element)\">\r\n                    <mat-icon>delete</mat-icon>\r\n                </button>\r\n                <mat-slide-toggle (change)=\"onChange($event.checked, element.id)\"\r\n                    matTooltip=\"Activate or Deactivate Product\" [checked]=\"element.status\"></mat-slide-toggle>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns:displayedColumns\"></tr>\r\n    </table>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { BillService } from 'src/app/services/bill.service';\r\nimport { SnackbarService } from 'src/app/services/snackbar.service';\r\nimport { GlobalConstants } from 'src/app/shared/global-constants';\r\nimport { ViewBillProductsComponent } from '../dialog/view-bill-products/view-bill-products.component';\r\nimport { ConfirmationComponent } from '../dialog/confirmation/confirmation.component';\r\nimport { saveAs } from 'file-saver';\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\r\n\r\n@Component({\r\n  selector: 'app-view-bill',\r\n  templateUrl: './view-bill.component.html',\r\n  styleUrls: ['./view-bill.component.scss'],\r\n})\r\nexport class ViewBillComponent implements OnInit {\r\n  displayedColumns: string[] = [\r\n    'name',\r\n    'email',\r\n    'contactNumber',\r\n    'paymentMethod',\r\n    'total',\r\n    'view',\r\n  ];\r\n  dataSource: any;\r\n  responseMessage: any;\r\n\r\n  constructor(\r\n    private billService: BillService,\r\n    private ngxService: NgxUiLoaderService,\r\n    private dialog: MatDialog,\r\n    private snackbarService: SnackbarService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.ngxService.start();\r\n    this.tableData();\r\n  }\r\n\r\n  tableData() {\r\n    this.billService.getBills().subscribe(\r\n      (response: any) => {\r\n        this.ngxService.stop();\r\n        this.dataSource = new MatTableDataSource(response);\r\n      },\r\n      (error: any) => {\r\n        this.ngxService.stop;\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackbarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  handleViewAction(values: any) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.data = {\r\n      data: values,\r\n    };\r\n    dialogConfig.width = '100%';\r\n    const dialogRef = this.dialog.open(ViewBillProductsComponent, dialogConfig);\r\n    this.router.events.subscribe(() => {\r\n      dialogRef.close();\r\n    });\r\n  }\r\n\r\n  downloadReportAction(values: any) {\r\n    this.ngxService.start();\r\n    var data = {\r\n      name: values.name,\r\n      email: values.email,\r\n      uuid: values.uuid,\r\n      contactNumber: values.contactNumber,\r\n      paymentMethod: values.paymentMethod,\r\n      totalAmount: values.total,\r\n      productDetails: values.productDetails,\r\n    };\r\n    this.billService.getPdf(data).subscribe((response) => {\r\n      saveAs(response, values.uuid + '.pdf');\r\n      this.ngxService.stop();\r\n    });\r\n  }\r\n\r\n  handleDeleteAction(values: any) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.data = {\r\n      message: 'delete ' + values.name + ' bill',\r\n    };\r\n    const dialogRef = this.dialog.open(ConfirmationComponent, dialogConfig);\r\n    const sub = dialogRef.componentInstance.onEmitStatusChange.subscribe(\r\n      (response) => {\r\n        this.ngxService.start();\r\n        this.deleteProduct(values.id);\r\n        dialogRef.close();\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteProduct(id: any) {\r\n    this.billService.delete(id).subscribe(\r\n      (response: any) => {\r\n        this.ngxService.stop();\r\n        this.tableData();\r\n        this.responseMessage = response?.message;\r\n        this.snackbarService.openSnackBar(this.responseMessage, 'success');\r\n      },\r\n      (error: any) => {\r\n        this.ngxService.stop;\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackbarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-card>\r\n    <b><span>View Bill</span></b>\r\n</mat-card>\r\n<hr>\r\n<mat-card>\r\n    <mat-form-field appearance=\"fill\">\r\n        <mat-label>Filter</mat-label>\r\n        <input matInput (keyup)=\"applyFilter($event)\" #input>\r\n    </mat-form-field>\r\n</mat-card>\r\n<hr>\r\n<div class=\"responsive_table\">\r\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n        <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef>Name</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"email\">\r\n            <th mat-header-cell *matHeaderCellDef>Email</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.email}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"contactNumber\">\r\n            <th mat-header-cell *matHeaderCellDef>Contact Number</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.contactNumber}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"paymentMethod\">\r\n            <th mat-header-cell *matHeaderCellDef>Payment Method</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.paymentMethod}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"total\">\r\n            <th mat-header-cell *matHeaderCellDef>Total</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.total}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"view\">\r\n            <th mat-header-cell *matHeaderCellDef>Action</th>\r\n            <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\r\n                <button mat-icon-button color=\"primary\" matTooltip=\"view\" (click)=\"handleViewAction(element)\">\r\n                    <mat-icon>visibility</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" matTooltip=\"Download Bill\"\r\n                    (click)=\"downloadReportAction(element)\">\r\n                    <mat-icon>summarize</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"handleDeleteAction(element)\">\r\n                    <mat-icon>delete</mat-icon>\r\n                </button>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n</div>","import { Routes } from '@angular/router';\r\nimport { DashboardComponent } from '../dashboard/dashboard.component';\r\nimport { ManageCategoryComponent } from './manage-category/manage-category.component';\r\nimport { RouteGuardService } from '../services/route-guard.service';\r\nimport { ManageProductComponent } from './manage-product/manage-product.component';\r\nimport { ManageOrderComponent } from './manage-order/manage-order.component';\r\nimport { ViewBillComponent } from './view-bill/view-bill.component';\r\nimport { ManageUserComponent } from './manage-user/manage-user.component';\r\n\r\nexport const MaterialRoutes: Routes = [\r\n  {\r\n    path: 'category',\r\n    component: ManageCategoryComponent,\r\n    canActivate: [RouteGuardService],\r\n    data: {\r\n      expectedRole: ['admin'],\r\n    },\r\n  },\r\n  {\r\n    path: 'product',\r\n    component: ManageProductComponent,\r\n    canActivate: [RouteGuardService],\r\n    data: {\r\n      expectedRole: ['admin'],\r\n    },\r\n  },\r\n  {\r\n    path: 'order',\r\n    component: ManageOrderComponent,\r\n    canActivate: [RouteGuardService],\r\n    data: {\r\n      expectedRole: ['admin', 'user'],\r\n    },\r\n  },\r\n  {\r\n    path: 'bill',\r\n    component: ViewBillComponent,\r\n    canActivate: [RouteGuardService],\r\n    data: {\r\n      expectedRole: ['admin', 'user'],\r\n    },\r\n  },\r\n  {\r\n    path: 'user',\r\n    component: ManageUserComponent,\r\n    canActivate: [RouteGuardService],\r\n    data: {\r\n      expectedRole: ['admin'],\r\n    },\r\n  },\r\n];\r\n"],"sourceRoot":"webpack:///"}