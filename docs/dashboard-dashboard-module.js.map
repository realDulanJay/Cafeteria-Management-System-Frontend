{"version":3,"sources":["./src/app/services/dashboard.service.ts","./src/app/dashboard/dashboard.routing.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.module.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DashboardService {\r\n  url = environment.apiUrl;\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getDetails() {\r\n    return this.httpClient.get(this.url + '/dashboard/details/');\r\n  }\r\n}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\nexport const DashboardRoutes: Routes = [{\r\n  path: '',\r\n  component: DashboardComponent\r\n}];\r\n","import { Component, AfterViewInit } from '@angular/core';\r\nimport { DashboardService } from '../services/dashboard.service';\r\nimport { SnackbarService } from '../services/snackbar.service';\r\nimport { GlobalConstants } from '../shared/global-constants';\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss'],\r\n})\r\nexport class DashboardComponent implements AfterViewInit {\r\n  responseMessage: any;\r\n  data: any;\r\n  ngAfterViewInit() {}\r\n\r\n  constructor(\r\n    private dashboardService: DashboardService,\r\n    private ngxService: NgxUiLoaderService,\r\n    private snackBarService: SnackbarService\r\n  ) {\r\n    this.ngxService.start();\r\n    this.dashboardData();\r\n  }\r\n\r\n  dashboardData() {\r\n    this.dashboardService.getDetails().subscribe(\r\n      (response: any) => {\r\n        this.ngxService.stop();\r\n        this.data = response;\r\n      },\r\n      (error: any) => {\r\n        this.ngxService.stop();\r\n        console.log(error);\r\n        if (error.error?.message) {\r\n          this.responseMessage = error.error?.message;\r\n        } else {\r\n          this.responseMessage = GlobalConstants.genericError;\r\n        }\r\n        this.snackBarService.openSnackBar(\r\n          this.responseMessage,\r\n          GlobalConstants.error\r\n        );\r\n      }\r\n    );\r\n  }\r\n}\r\n","<body>\r\n    <mat-card>\r\n        <b><span>Dashboard</span></b>\r\n    </mat-card>\r\n    <br>\r\n    <div class=\"row\">\r\n        <div class=\"column\">\r\n            <div class=\"card\">\r\n                <div class=\"container\">\r\n                    <h2 class=\"title\">Total Categories</h2>\r\n                    <h1 class=\"title\">{{data?.category}}</h1>\r\n                    <p><button class=\"button\" [routerLink]=\"['/cafeteria/category']\">View Categories</button></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"column\">\r\n            <div class=\"card\">\r\n                <div class=\"container\">\r\n                    <h2 class=\"title\">Total Products</h2>\r\n                    <h1 class=\"title\">{{data?.product}}</h1>\r\n                    <p><button class=\"button\" [routerLink]=\"['/cafeteria/product']\">View Products</button></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"column\">\r\n            <div class=\"card\">\r\n                <div class=\"container\">\r\n                    <h2 class=\"title\">Total Bills</h2>\r\n                    <h1 class=\"title\">{{data?.bill}}</h1>\r\n                    <p><button class=\"button\" [routerLink]=\"['/cafeteria/bill']\">View Bills</button></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { DashboardRoutes } from './dashboard.routing';\r\nimport { MaterialModule } from '../shared/material-module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    RouterModule.forChild(DashboardRoutes)\r\n  ],\r\n  declarations: [DashboardComponent]\r\n})\r\nexport class DashboardModule { }\r\n"],"sourceRoot":"webpack:///"}